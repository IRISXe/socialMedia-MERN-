[{"C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\index.js":"1","C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\App.js":"2","C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\redux\\store.js":"3","C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\redux\\reducer.js":"4","C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\pages\\index.js":"5","C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\redux\\postSlice.js":"6","C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\redux\\theme.js":"7","C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\pages\\Login.jsx":"8","C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\pages\\Register.jsx":"9","C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\pages\\Home.jsx":"10","C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\pages\\profile.jsx":"11","C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\pages\\ResetPassword.jsx":"12"},{"size":603,"mtime":1696749890219,"results":"13","hashOfConfig":"14"},{"size":898,"mtime":1696780715436,"results":"15","hashOfConfig":"14"},{"size":240,"mtime":1696704516837,"results":"16","hashOfConfig":"14"},{"size":303,"mtime":1696600082870,"results":"17","hashOfConfig":"14"},{"size":228,"mtime":1696655690257,"results":"18","hashOfConfig":"14"},{"size":451,"mtime":1696600080169,"results":"19","hashOfConfig":"14"},{"size":624,"mtime":1696613415585,"results":"20","hashOfConfig":"14"},{"size":1494,"mtime":1696779805214,"results":"21","hashOfConfig":"14"},{"size":2525,"mtime":1696777587677,"results":"22","hashOfConfig":"14"},{"size":122,"mtime":1696615007599,"results":"23","hashOfConfig":"14"},{"size":119,"mtime":1696600235292,"results":"24","hashOfConfig":"14"},{"size":1977,"mtime":1696784870953,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},"akx0ff",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"30"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"30"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"30"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},"C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\index.js",["75"],[],"import React from 'react';\n\nimport { createRoot } from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\n// Import the store object from the correct file.\nimport store from './redux/store';\n\n// Only render the <Provider> component once at the top level of your application.\nconst root = createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n);",[],"C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\App.js",["76"],[],"\nimport { Outlet,Navigate,Route,Routes,useLocation } from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\nimport { Home, Login, Profile, Register, ResetPassword } from \"./pages\";\n\nfunction Layout(){\n  const user = useSelector(state=>state.user)\n  const location= useLocation();\nconsole.log(user);\n  return user?.token? (\n    <Outlet/>\n  ):(\n    <Navigate to=\"/login\" state={{ from:location}} replace />\n  );\n}\n\nfunction App(){\n  return(\n    <div className=\"w-full min-h-[100vh]\">\n      <Routes>\n        <Route element ={<Layout/>}>\n          <Route path=\"/\" element={<Home/>}/>\n          <Route path=\"/profile/:id?\"element={<Profile/>}/>\n        </Route>\n\n        <Route path=\"/register\" element={<Register/>}/>\n        <Route path=\"/login\" element={<Login/>}/>\n        <Route path=\"/reset-password\" element={<ResetPassword/>}/>\n      </Routes>\n    </div>\n  );\n}\nexport default App;\n","C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\redux\\store.js",["77"],[],"import {configureStore} from \"@reduxjs/toolkit\"\r\nimport {rootreducer} from \"./reducer\";\r\n\r\n\r\nconst store = configureStore({\r\n    reducer:rootreducer,\r\n});\r\n\r\nconst {dispatch } = store;\r\n\r\nexport default store;\r\n\r\nexport {store, dispatch};\r\n","C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\redux\\reducer.js",["78"],[],"import { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport userSlice from \"./postSlice\"\r\nimport themeSlice from \"./theme\"\r\nimport postSlice from \"./postSlice\"\r\n\r\n\r\nconst rootreducer = combineReducers({\r\n    user: userSlice,\r\n    theme: themeSlice,\r\n    posts: postSlice,\r\n});\r\n\r\nexport {rootreducer};","C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\pages\\index.js",["79"],[],"import Home from \"./Home\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\nimport Profile from './profile'; \r\nimport ResetPassword from \"./ResetPassword\";\r\nexport {Login,Home,Register,Profile,ResetPassword};\r\n","C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\redux\\postSlice.js",["80"],[],"import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    Posts:{},\r\n};\r\n\r\nconst postSlice = createSlice({\r\n    name:\"post\",\r\n    initialState,\r\n    reducers:{\r\n        getPosts(state,action){\r\n            state.posts = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport default postSlice.reducer;\r\n\r\nexport function SetPosts(post) {\r\n    return(dispatch,getstate)=>{\r\n        dispatch(postSlice.action.getPosts(post));\r\n    };\r\n}","C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\redux\\theme.js",["81"],[],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { json } from \"react-router-dom\";\r\n\r\nconst initialState = {\r\n    theme: JSON.parse(window?.localStorage.getItem(\"theme\")) ?? \"dark\",\r\n\r\n};\r\nconst themeSlice = createSlice({\r\n    name: \"theme\",\r\n    initialState,\r\n    reducers:{\r\n        setTheme(state,action) {\r\n            state.theme = action.payload\r\n            localStorage.setItem(\"theme\",JSON.stringify(action.payload));\r\n        },\r\n    },\r\n});\r\nexport default themeSlice.reducer;\r\n\r\nexport function setTheme(value) {\r\n    return (dispatch) =>{\r\n        dispatch(themeSlice.actions.setTheme(value))\r\n    };\r\n}","C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\pages\\Login.jsx",["82"],[],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\"; // Import the Link component from react-router-dom\r\nimport './login.css'; // Import your CSS file\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Add your login logic here, such as sending the data to a server for authentication.\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h1>Login</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <div className=\"new-user\">\r\n        <p>New User? <Link to=\"/register\">Sign up here</Link></p>\r\n        <p><Link to=\"/ResetPassword\">Forgot Password?</Link></p> {/* Add the \"Forgot Password\" link */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\pages\\Register.jsx",["83"],[],"import React, { useState } from \"react\";\r\nimport \"./Register.css\"; // Import your CSS file\r\n\r\nconst Register = () => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      alert(\"Passwords do not match.\");\r\n    } else {\r\n      // Handle registration logic here (e.g., send data to a server)\r\n      alert(\"Registration successful!\");\r\n      // Redirect to the login page or perform any other necessary action\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <h1>Register</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"firstName\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"firstName\"\r\n            value={firstName}\r\n            onChange={(e) => setFirstName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"lastName\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"lastName\"\r\n            value={lastName}\r\n            onChange={(e) => setLastName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email Address</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\pages\\Home.jsx",["84"],[],"import React from \"react\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>Home</div>\r\n    )\r\n}\r\n\r\nexport default Home","C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\pages\\profile.jsx",["85"],[],"import React from \"react\";\r\n\r\nconst Profile = () => {\r\n    return <div>Profile</div>;;\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\src\\pages\\ResetPassword.jsx",["86"],[],"import React, { useState } from \"react\";\r\nimport './ResetPassword.css'; // Import your CSS file\r\n//import { ResetPassword } from \".\";\r\n\r\nconst ResetPassword = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [resetSent, setResetSent] = useState(false); // State to track if the reset email has been sent\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      // You would typically send a request to your server to handle the password reset process.\r\n      // Replace this with your actual API endpoint and request method (e.g., using axios or fetch).\r\n\r\n      // Simulating a password reset request (replace with actual code):\r\n      const response = await fetch(\"/api/reset-password\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        // Password reset successful\r\n        setResetSent(true);\r\n      } else {\r\n        // Password reset failed\r\n        alert(\"Password reset failed. Please check your email and try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"An error occurred:\", error);\r\n      alert(\"An error occurred. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"forgot-password-container\">\r\n      <h1>Forgot Password</h1>\r\n      {resetSent ? (\r\n        <p>Password reset instructions sent to your email.</p>\r\n      ) : (\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email Address</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\">ForgotPassword</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n",{"ruleId":null,"fatal":true,"severity":2,"message":"87","nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"87","nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"87","nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"87","nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"87","nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"87","nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"87","nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"87","nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"87","nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"87","nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"87","nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"87","nodeType":null},"Parsing error: require() of ES Module C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\node_modules\\eslint\\node_modules\\eslint-scope\\lib\\definition.js from C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\node_modules\\babel-eslint\\lib\\require-from-eslint.js not supported.\nInstead change the require of definition.js in C:\\Users\\Harsha\\OneDrive\\Desktop\\social media\\node_modules\\babel-eslint\\lib\\require-from-eslint.js to a dynamic import() which is available in all CommonJS modules."]